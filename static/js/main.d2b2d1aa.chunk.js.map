{"version":3,"sources":["components/navigation.jsx","components/footer.jsx","components/faq.jsx","components/errors.jsx","components/card.jsx","components/howto.jsx","components/assistantCard.jsx","components/Assistant.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Footer","data","rows","title","content","styles","titleTextColor","rowTitleColor","config","Faqs","Errors","map","d","flipOnHover","flipOnClick","flipDirection","style","width","height","borderRadius","margin","background","Typography","alignSelf","color","ExpandMore","styled","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","ExpandCard","React","expanded","setExpanded","Card","sx","maxWidth","CardContent","variant","CardActions","disableSpacing","onClick","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","paragraph","Howto","Box","flexGrow","Grid","container","spacing","xs","md","columns","sm","index","item","AssistantCard","closeAssistant","next","CardHeader","action","size","Close","gutterBottom","component","align","questionText","justifyContent","end","Button","Assistant","questions","useState","showAssistant","setShowAssistant","setAssistant","useEffect","JsonData","currentQuestion","setCurrentQuestion","nextQuestion","length","App","SmoothScroll","speed","speedAsDuration","setLandingPageData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2b2d1aa.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  return (\r\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\r\n      <div className='container'>\r\n        <div className='navbar-header'>\r\n          <button\r\n            type='button'\r\n            className='navbar-toggle collapsed'\r\n            data-toggle='collapse'\r\n            data-target='#bs-example-navbar-collapse-1'\r\n          >\r\n            {' '}\r\n            <span className='sr-only'>Toggle navigation</span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n          </button>\r\n          <a className='navbar-brand page-scroll' href='#page-top'>\r\n            Teleplan\r\n          </a>{' '}\r\n        </div>\r\n\r\n        <div\r\n          className='collapse navbar-collapse'\r\n          id='bs-example-navbar-collapse-1'\r\n        >\r\n          <ul className='nav navbar-nav navbar-right'>\r\n            <li>\r\n              <a href='#features' className='page-scroll'>\r\n                Errors\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#team' className='page-scroll'>\r\n                How to\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#portfolio' className='page-scroll'>\r\n                Faqs\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","\r\nexport const Footer = (props) => {\r\n  return (\r\n      <div id='footer'>\r\n        <div className='container text-center'>\r\n          <p>\r\n            &copy; 2021 Teleplan Debug Page. Design by Fiston.\r\n          </p>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n","//import React, { useEffect, useState } from \"react\";\r\nimport Faq from \"react-faq-component\";\r\n\r\nconst data = {\r\n    rows: [\r\n    {\r\n        title: \"Do we need to connect all the wires into the unit\",\r\n        content: \"No, as long as you know the job of each wire there is power supply for Power Up, ethernet cable to connect to ethos on the laptop in TA, Hdmi to show on the screen what is going on, 2 Optical Cables to download TA, provide signals and also one optical cable can do the job of two\",\r\n    },\r\n    {\r\n        title: \"why we always connect to ground on legs and arms\",\r\n        content: \"It mandatory to connect to ground to protect the electronics from ESD (Electrostatic Discharge) by removing charge from your body but its also prohibited when working with plugged in units with internal power supply because it have many volts that can be fatal\"\r\n    },\r\n    {\r\n        title: \"Why we have to wait for a moment after replacing an  ic with hot air station \",\r\n        content: \"ICs have inside little components called transistors and when we apply heat some parts melt but when we let them cool slowly they return to their original shapes but when we don't it may cause short circuits which will damage it completely. \"\r\n    }\r\n]\r\n}\r\n\r\nconst styles = {\r\n    // bgColor: 'white',\r\n    titleTextColor: \"#6372ff\",\r\n    rowTitleColor: \"#6372ff\",\r\n    // rowContentColor: 'grey',\r\n    // arrowColor: \"red\",\r\n}\r\n\r\nconst config = {\r\n    // animate: true,\r\n    // arrowIcon: \"V\",\r\n    // tabFocus: true\r\n};\r\n\r\nexport const Faqs = (props) => {\r\n\r\n  return (\r\n    <div id='portfolio' className='text-center'>\r\n      <div className='container'>\r\n        <div className='section-title'>\r\n          <h2>FAQs</h2>\r\n          <p>\r\n            Frequent Asked Questions\r\n          </p>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='portfolio-items'>\r\n            <div className=' col-md-8 col-md-offset-2'>\r\n\r\n            <Faq\r\n                          data={data}\r\n                          styles={styles}\r\n                          config={config}\r\n                      />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import Flippy, { FrontSide, BackSide } from 'react-flippy';\r\nimport Typography from '@mui/material/Typography';\r\nimport { colors } from '@mui/material';\r\n\r\nconst data = [\r\n    {\r\n        title: 'Max Fan Speed',\r\n        content: \"the fan is either not turning properly or not working\"\r\n    },\r\n    {\r\n        title: \"Dut-info\",\r\n        content: \"The Unit is not able to download the testing agent\"\r\n    },\r\n    {\r\n      title: \"Av-analysis\",\r\n      content: \"There is problem with playing sounds, test all dishinputs\"\r\n    },\r\n    {\r\n      title: \"Recordplayback\",\r\n      content: \"Test Approved Hdd, Hdd attributes and Short Hdd\"\r\n    },\r\n    {\r\n      title: \"Bluetooth\",\r\n      content: \"Test it in Faraday box by pressing 1 and 3 on remote\"\r\n    },\r\n    {\r\n      title: \"Wifi 5Ghz connectivity\",\r\n      content: \"Test in Faraday box then change the 5Ghz IC\"\r\n    },\r\n    {\r\n      title: \"Wifi 2.4Ghz connectivity\",\r\n      content: \"Test in Faraday box then change the 2.4Ghz IC\"\r\n    },\r\n    {\r\n      title: \"No error\",\r\n      content: \"Check where it came from if hipot or Cosmetic\"\r\n    },,\r\n    {\r\n      title: \"SmartCard\",\r\n      content: \"Test SmartCard in TA then change IC or Socket\"\r\n    },\r\n    {\r\n      title: \"PowerUp\",\r\n      content: \"The unit is unable to turn on, find the short circuit\"\r\n    },\r\n    {\r\n      title: \"InfraRed\",\r\n      content: \"Test InfraRed in TA by pressing SKY on Remote\"\r\n    },\r\n    {\r\n      title: \"HDD\",\r\n      content: \"Test Approved Hdd and Short Hdd if fail, change HDD\"\r\n    }\r\n\r\n]\r\n\r\nexport const Errors = (props) => {\r\n    return (\r\n      <div id='features' className='text-center'>\r\n        <div className='container'>\r\n          <div className='col-md-10 col-md-offset-1 section-title'>\r\n            <h2>errors</h2>\r\n          </div>\r\n          <div className='row'>\r\n              {\r\n                  data.map((d) => (\r\n                      <div className='col-xs-6 col-md-3'>\r\n                        <Flippy\r\n                            flipOnHover={true} // default false\r\n                            flipOnClick={true} // default false\r\n                            flipDirection=\"horizontal\" // horizontal or vertical\r\n                            //ref={(r) => this.flippy = r} // to use toggle method like this.flippy.toggle()\r\n                            // if you pass isFlipped prop component will be controlled component.\r\n                            // and other props, which will go to div\r\n                            style={{ width: '200px', height: '100px', borderRadius: '25px', margin: '25px' }} /// these are optional style, it is not necessary\r\n                        >\r\n                            <FrontSide style={{background: \"linear-gradient(to right, #6372ff 0%, #5ca9fb 100%)\"}}>\r\n                              <Typography alignSelf={\"center\"}>\r\n                                <h3>{d.title}</h3>\r\n                              </Typography>\r\n                            </FrontSide>\r\n                            <BackSide >\r\n                              <Typography alignSelf={\"center\"} color={\"black\"}>\r\n                                <h5>{d.content}</h5>\r\n                              </Typography>\r\n                            </BackSide>\r\n                        </Flippy>\r\n                      </div>\r\n                  ))\r\n              }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  ","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nconst ExpandMore = styled((props) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n  })(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  }));\r\n  \r\nexport default function ExpandCard(props) {\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n  \r\n    return (\r\n      <Card sx={{ maxWidth: 400, margin: 5 }}>\r\n        \r\n        <CardContent>\r\n          <Typography variant=\"h4\" >\r\n            {props.data.title}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <ExpandMore\r\n            expand={expanded}\r\n            onClick={handleExpandClick}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </ExpandMore>\r\n        </CardActions>\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n          <CardContent>\r\n            <Typography paragraph variant=\"h6\" color=\"text.secondary\">\r\n              {props.data.content}\r\n            </Typography>\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    );\r\n}","import Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport ExpandCard from './card';\r\n\r\nconst data = [\r\n    {\r\n        title: \"How to Factory Reset\",\r\n        content: \"Connect the unit to the power source, then you will reach a blue screen. when it goes blank press home key go down to settings press on remote 0,0,1,OK respectively, click on factory reset then confirm. it will restart and wait again for the blue screen and disconnect from power source\"\r\n    },\r\n    {\r\n      title: \"How to LDO\",\r\n      content: \"Open model 130 unit up to the motherboard and also remove the fan. Then right on the side there is an IC of U340 replace it and check if the unit powers on\"\r\n    },\r\n    {\r\n      title: \"How to go into ETHOS\",\r\n      content: \"Connect unit properly with Ln1,Ln2,ethernet,Hdmi then power source, It will power up and Hello screen will appear, as soon as it goes blank press and hold the power button untill the screen shows it started to downloading the Test Agent\"\r\n    }];\r\n\r\nexport const Howto = (props) => {\r\n    return (\r\n      <div id='team' className='text-center'>\r\n        <div className='container'>\r\n          <div className='col-md-8 col-md-offset-2 section-title'>\r\n            <h2>How to</h2>\r\n            <p>\r\n              Sometimes you forget what to do but here you will always remember\r\n            </p>\r\n          </div>\r\n          <div id='row'>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n              <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\r\n                {data.map((data, index) => (\r\n                  <Grid item xs={2} sm={4} md={4} key={index}>\r\n                    <ExpandCard data={data}/>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Box>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  ","import Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { IconButton } from '@mui/material';\r\nimport { Close } from '@mui/icons-material';\r\n\r\nexport const AssistantCard = ({data,closeAssistant,next}) => {\r\n\r\n    return (\r\n        <Card >\r\n            <CardHeader \r\n                action={\r\n                <IconButton size = 'small' onClick={closeAssistant} >\r\n                    <Close/>\r\n                </IconButton>\r\n                }\r\n            />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h4\" component=\"div\" align=\"center\">\r\n            {data.questionText}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardActions style={{justifyContent: \"space-evenly\"}}>\r\n            { !data.end ? \r\n            <div>\r\n                <Button onClick={next} size=\"large\">Yes</Button> \r\n                <Button onClick={next} size=\"large\">No</Button>\r\n            </div>: null}\r\n          </CardActions>\r\n        </Card>\r\n      );\r\n  }\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport { AssistantCard } from \"./assistantCard\"\r\nimport JsonData from '../data/assistantdata.json'\r\n\r\nexport const Assistant = (props) => {\r\n\r\n    const questions = [\r\n\t\t{\r\n\t\t\tquestionText: 'Does the Unit Power Up?',\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Are the wires connected well?',\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Open the unit and check if there is visible damage around power supply, Can you see one?',\r\n\t\t\t\r\n\t\t},\r\n\t\t{\r\n\t\t\tquestionText: 'Change that Component and start over',\r\n\t\t\tend: true,\r\n\t\t},\r\n\t];\r\n    \r\n    const [showAssistant, setShowAssistant] = useState(false)\r\n    const [assistant, setAssistant] = useState({});\r\n    useEffect(() => {\r\n        setAssistant(JsonData);\r\n    }, []);\r\n    \r\n    //no sense\r\n    const [currentQuestion, setCurrentQuestion] = useState(0);\r\n\tconst nextQuestion = () => {\r\n\t\tconst nextQuestion = currentQuestion + 1;\r\n\t\tif (nextQuestion < questions.length) {\r\n\t\t\tsetCurrentQuestion(nextQuestion);\r\n\t\t}\r\n\t};\r\n\r\n    return (\r\n      <header id='header'>\r\n        <div className='intro'>\r\n          <div className='overlay'>\r\n            <div className='container'>\r\n              <div className='row'>\r\n                 <div className='col-md-8 col-md-offset-2 intro-text'>\r\n                 {showAssistant ? <AssistantCard data={questions[currentQuestion]} next={nextQuestion} closeAssistant={()=>{setCurrentQuestion(0); setShowAssistant(false)}}/> :\r\n                     <div>\r\n                        <h1>\r\n                            Debug assistant\r\n                            <span></span>\r\n                        </h1>\r\n                        \r\n                        <a\r\n                            onClick={()=>setShowAssistant(true)}\r\n                            className='btn btn-custom btn-lg page-scroll'\r\n                        >\r\n                        Launch\r\n                        </a>\r\n                        {' '}\r\n                     </div>}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n  ","import { useState, useEffect } from \"react\";\r\nimport { Navigation } from \"./components/navigation\";\r\nimport { Header } from \"./components/header\";\r\nimport { Features } from \"./components/features\";\r\nimport { About } from \"./components/about\";\r\nimport { Services } from \"./components/services\";\r\nimport { Gallery } from \"./components/gallery\";\r\nimport { Testimonials } from \"./components/testimonials\";\r\nimport { Team } from \"./components/Team\";\r\nimport { Contact, Footer } from \"./components/footer\";\r\nimport JsonData from \"./data/data.json\";\r\nimport SmoothScroll from \"smooth-scroll\";\r\nimport \"./App.css\";\r\nimport { Faqs } from \"./components/faq\";\r\nimport { Errors } from \"./components/errors\";\r\nimport ExpandCard from \"./components/card\";\r\nimport { Howto } from \"./components/howto\";\r\nimport { Assistant } from \"./components/Assistant\";\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n});\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({});\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navigation/>\r\n      <Assistant/>\r\n      <Errors/>\r\n      <Howto/>\r\n      <Faqs/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}